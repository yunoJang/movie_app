{"version":3,"sources":["Movie.js","Paging.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","rating","ytCode","String","length","className","src","alt","map","genre","index","slice","href","target","rel","Paging","pageNumber","getMovies","onClick","bind","icon","faAngleLeft","faAngleRight","App","state","isLoading","movies","cacheMovies","Map","page","a","this","has","setState","axios","get","data","set","movie","id","medium_cover_image","yt_trailer_code","renderMovies","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAsCeA,MAnCf,YAAkE,IAAlDC,EAAiD,EAAjDA,KAAKC,EAA4C,EAA5CA,MAAMC,EAAsC,EAAtCA,QAAQC,EAA8B,EAA9BA,OAAOC,EAAuB,EAAvBA,OAAOC,EAAgB,EAAhBA,OAAOC,EAAS,EAATA,OAGpD,OAFAD,EAASE,OAAOF,GAAQG,OAAS,EAAxB,UAA+BH,EAA/B,MAA4CA,EAGjD,sBAAKI,UAAU,QAAf,UACI,qBAAKC,IAAKP,EAAQQ,IAAKV,EAAOA,MAAOA,IACrC,sBAAKQ,UAAU,OAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBR,IACvB,oBAAIQ,UAAU,OAAd,SAAsBT,IACtB,oBAAIS,UAAU,SAAd,SACKL,EAAOQ,KAAI,SAACC,EAAMC,GAAP,OAAe,oBAAgBL,UAAU,QAA1B,SAAmCI,GAA1BC,QAExC,sBAAKL,UAAU,SAAf,qBAAgC,+BAAOJ,OACvC,oBAAGI,UAAU,UAAb,UAAwBP,EAAQa,MAAM,EAAE,KAAxC,SACU,KAATT,EACC,GACD,mBAAGG,UAAU,UAAUO,KAAI,0CAAqCV,GAAUW,OAAO,SAASC,IAAI,aAA9F,iC,oBCOFC,MArBf,YAAyC,IAAxBC,EAAuB,EAAvBA,WAAWC,EAAY,EAAZA,UACxB,OACI,sBAAKZ,UAAU,SAAf,UACoB,IAAfW,EAAmB,qBAAKX,UAAU,YAC/B,wBAAQA,UAAU,OAAOa,QAAWD,EAAUE,KAAK,KAAKH,EAAW,GAAnE,SACI,cAAC,IAAD,CAAiBI,KAAMC,QAG/B,sBAAMhB,UAAU,cAAhB,SAA+BW,IAC/B,wBAAQX,UAAU,OAAOa,QAAWD,EAAUE,KAAK,KAAKH,EAAW,GAAnE,SACI,cAAC,IAAD,CAAiBI,KAAME,YCsExBC,G,wNA7EXC,MAAQ,CACJC,WAAY,EACZC,OAAS,GACTV,WAAa,G,EAGjBW,YAAc,IAAIC,I,sFAElB,WAAgBC,GAAhB,qBAAAC,EAAA,0DACWH,EAAeI,KAAfJ,aAESK,IAAIH,GAHxB,uBAIQE,KAAKE,SAAS,CAACR,WAAY,IAJnC,SAM6CS,IAAMC,IAAN,yDAA4DN,EAA5D,oBAN7C,gBAM2BH,EAN3B,EAMeU,KAAMA,KAAMV,OACnBC,EAAYU,IAAIR,EAAKH,GAP7B,OAUUA,EAAUC,EAAYQ,IAAIN,GAEhCE,KAAKE,SAAS,CACVR,WAAY,EACZT,WAAaa,EACbH,WAfR,iD,sFAmBA,WACIK,KAAKd,UAAUc,KAAKP,MAAMR,c,0BAG9B,WAGI,OAFiBe,KAAKP,MAAfE,OAEOlB,KAAK,SAAC8B,GAAD,OACf,cAAC,EAAD,CAEIC,GAAID,EAAMC,GACV3C,KAAM0C,EAAM1C,KACZC,MAAOyC,EAAMzC,MACbC,QAASwC,EAAMxC,QACfC,OAAQuC,EAAME,mBACdxC,OAAQsC,EAAMtC,OACdC,OAAUqC,EAAMrC,OAChBC,OAAUoC,EAAMG,iBARXH,EAAMC,S,oBAYvB,WACI,MAA+BR,KAAKP,MAA7BC,EAAP,EAAOA,UAAUT,EAAjB,EAAiBA,WAEjB,OACI,yBAASX,UAAU,YAAnB,SACKoB,EAEO,qBAAKpB,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAIJ,iCACI,qBAAKA,UAAU,SAAf,SACK0B,KAAKW,iBAGV,cAAC,EAAD,CACI1B,WAAcA,EACdC,UAAac,KAAKd,UAAUE,KAAKY,iB,GApE/CY,IAAMC,YCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.78d6d745.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './css/Movie.css';\r\n\r\nfunction Movie({year,title,summary,poster,genres,rating,ytCode}) {\r\n    rating = String(rating).length < 2 ? `${rating}.0` : rating;\r\n    \r\n    return (\r\n        <div className='movie'>\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className='data'>\r\n                <h3 className='title'>{title}</h3>\r\n                <h5 className='year'>{year}</h5>\r\n                <ul className='genres'>\r\n                    {genres.map((genre,index)=><li key={index} className='genre'>{genre}</li>)}\r\n                </ul>\r\n                <div className='rating'>Score : <span>{rating}</span></div>\r\n                <p className='summary'>{summary.slice(0,180)}...</p>\r\n                {ytCode===''\r\n                ? ''\r\n                :<a className='trailer' href={`https://www.youtube.com/watch?v=${ytCode}`} target='_blank' rel='noreferrer'>Show Trailer</a>\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title:PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    rating : PropTypes.number.isRequired,\r\n    ytCode : PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Movie;","import PropTypes from 'prop-types';\r\nimport { faAngleLeft,faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport './css/Paging.css';\r\n\r\nfunction Paging({pageNumber,getMovies}) {\r\n    return (\r\n        <div className='paging'>\r\n            {pageNumber === 1 ? <div className='padding' /> :\r\n                <button className='prev' onClick = {getMovies.bind(null,pageNumber-1)}>\r\n                    <FontAwesomeIcon icon={faAngleLeft} />\r\n                </button>\r\n            }\r\n            <span className='page-number'>{pageNumber}</span>\r\n            <button className='next' onClick = {getMovies.bind(null,pageNumber+1)}>\r\n                <FontAwesomeIcon icon={faAngleRight} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nPaging.propTypes = {\r\n    pageNumber : PropTypes.number.isRequired,\r\n    getMovies : PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Paging;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from './Movie';\r\nimport Paging from './Paging';\r\nimport './css/reset.css';\r\nimport './css/App.css';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        isLoading : true,\r\n        movies : [],\r\n        pageNumber : 1,\r\n    };\r\n\r\n    cacheMovies = new Map();\r\n\r\n    async getMovies(page) {\r\n        const {cacheMovies} = this;\r\n\r\n        if(!cacheMovies.has(page)) {\r\n            this.setState({isLoading : true})\r\n\r\n            const {data:{data:{movies}}} = await axios.get(`https://yts-proxy.now.sh/list_movies.json?page=${page}&sort_by=rating`);\r\n            cacheMovies.set(page,movies);\r\n        }\r\n\r\n        const movies =  cacheMovies.get(page);\r\n        \r\n        this.setState({\r\n            isLoading : false,\r\n            pageNumber : page,\r\n            movies\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovies(this.state.pageNumber);\r\n    }\r\n\r\n    renderMovies() {\r\n        const {movies} = this.state;\r\n\r\n        return movies.map( (movie)=> \r\n            <Movie \r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n                rating = {movie.rating}\r\n                ytCode = {movie.yt_trailer_code}\r\n            />)\r\n    }\r\n\r\n    render() {\r\n        const {isLoading,pageNumber} = this.state;\r\n\r\n        return (\r\n            <section className='container'>\r\n                {isLoading\r\n                    ? (\r\n                        <div className='loader'>\r\n                            <span className='loader-text'>Loading...</span>\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        <main>\r\n                            <div className='movies'>\r\n                                {this.renderMovies()}\r\n                            </div>\r\n\r\n                            <Paging \r\n                                pageNumber = {pageNumber}\r\n                                getMovies = {this.getMovies.bind(this)}\r\n                            />\r\n                        </main>\r\n                    )\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}